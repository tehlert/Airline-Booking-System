using Air3550.Database.Context;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace Air3550
{

    //This is the main form for the customer
    public partial class CustomerForm : Form
    {
        //flag for determining if buttons will remake page if clicked twice
        bool accountInfoClicked = false;
        bool browseFlightsClicked = false;
        public bool flightHistoryClicked = false;
        bool logoutClicked = false;

        //parent set in constructor
        LoginForm loginFormParent;
        public CustomerForm(LoginForm loginForm)
        {
            InitializeComponent();
            loginFormParent = loginForm;

            //get customer and set id text
            using (var db = new FlightContext())
            {
                var customer = db.Customers.Single(customer => customer.CustomerID == CustomerSession.CUSTOMER_ID);
                label2.Text = customer.CustomerUsername;
            }
        }

        //override so application can exit properly or logout properly
        protected override void OnFormClosing(FormClosingEventArgs e)
        {
            base.OnFormClosing(e);

            if (e.CloseReason == CloseReason.WindowsShutDown) return;
            if (!logoutClicked)
            {
                Application.Exit();
            }
        }

        //top start form
        private Form activeFormTop = null;

        //This changes the top active form control to a new one if a tab button was selected
        public void openChildFormTop(Form childForm)
        {
            if (activeFormTop != null)
            {
                activeFormTop.Close();
            }
            activeFormTop = childForm;
            childForm.TopLevel = false;
            childForm.FormBorderStyle = FormBorderStyle.None;
            childForm.Dock = DockStyle.Fill;
            topBarPanel.Controls.Add(childForm);
            topBarPanel.Tag = childForm;
            childForm.BringToFront();
            childForm.Show();
        }

        //main start form
        private Form activeFormMain = null;

        //this changes the main active form control to a new one if a tab button was selected
        public void openChildFormMain(Form childForm)
        {
            if (activeFormMain != null)
            {
                activeFormMain.Close();
            }
            activeFormMain = childForm;
            childForm.TopLevel = false;
            childForm.FormBorderStyle = FormBorderStyle.None;
            childForm.Dock = DockStyle.Fill;
            mainPanel.Controls.Add(childForm);
            mainPanel.Tag = childForm;
            childForm.BringToFront();
            childForm.Show();
        }

        //autogenerated, do nothing here
        private void CustomerForm_Load(object sender, EventArgs e)
        {

        }

        //when this button is clicked display new forms for account info
        private void accountInfoButton_Click(object sender, EventArgs e)
        {
            //reset flags
            browseFlightsClicked = false;
            flightHistoryClicked = false;
            if (accountInfoClicked)
            {
                //do nothing here to avoid reloading form multiple times, i know this fix is bad but works
            }
            else 
            {
                AccountInfoTopForm topForm = new AccountInfoTopForm();
                openChildFormTop(topForm);
                openChildFormMain(topForm.childAccountInfoMainForm);
                accountInfoClicked = true;
            }
        }

        //display correct forms for browsing flights
        private void browseFlightsButton_Click(object sender, EventArgs e)
        {
            //reset flags
            accountInfoClicked = false;
            flightHistoryClicked = false;
            if (browseFlightsClicked)
            {
                //do nothing
            }
            else 
            {
                BrowseFlightsTopForm topForm = new BrowseFlightsTopForm();
                openChildFormTop(topForm);
                openChildFormMain(topForm.childBrowseFlightsMainForm);
                browseFlightsClicked = true;
            }
        }

        //exit application
        private void customerExitButton_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        //display correct forms for flight history

        public void flightHistoryButton_Click(object sender, EventArgs e)
        {
            accountInfoClicked = false;
            browseFlightsClicked = false;
            if (flightHistoryClicked)
            {
                //do nothing
            }
            else 
            {
                //display forms
                flightHistoryTopForm topForm = new flightHistoryTopForm(this);
                openChildFormTop(topForm);
                openChildFormMain(topForm.mainForm);
                flightHistoryClicked = true;
            }
        }

        //log user out correctly
        private void customerLogOutButton_Click(object sender, EventArgs e)
        {
            logoutClicked = true;
            this.Close();
            //logout of session
            CustomerSession.logout();
            loginFormParent.Show();
        }
    }
}
